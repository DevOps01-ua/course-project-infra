

name: 'Terraform'

on:
  push:
    branches: [ "develop" ]
  pull_request:

permissions:
  id-token: write # This is required for requesting the JWT
  contents: read  # This is required for actions/checkout


jobs:
  terraform-infra-develop-plan:
    name: 'Terraform'
    runs-on: ubuntu-latest

    # Use the Bash shell regardless whether the GitHub Actions runner is ubuntu-latest, macos-latest, or windows-latest
    defaults:
      run:
        shell: bash
        working-directory: ./infrastructure

    steps:
    # Checkout the repository to the GitHub Actions runner
    - name: Checkout
      uses: actions/checkout@v3

    - name: configure aws credentials
      uses: aws-actions/configure-aws-credentials@v3
      with:
        role-to-assume: arn:aws:iam::730335176685:role/github
        role-session-name: terraform
        aws-region: eu-central-1

    # Initialize a new or existing Terraform working directory by creating initial files, loading any remote state, downloading modules, etc.
    - name: Terraform Init
      run: terraform init


    # Checks that all Terraform configuration files adhere to a canonical format
    - name: Terraform Format
      run: terraform fmt -check

    # Generates an execution plan for Terraform
    - name: Terraform Plan
      run: terraform plan -out=tfplan -input=false && terraform show -json tfplan > plan_output.json

    - uses: actions/upload-artifact@v2
      with:
        name: terraform-plan-artifact
        path: ./infracore/plan_output.json

  terraform-infra-develop-apply:
    name: 'Terraform'
    runs-on: ubuntu-latest
    needs: terraform-infra-develop-plan
    environment:
      name: develop

    # Use the Bash shell regardless whether the GitHub Actions runner is ubuntu-latest, macos-latest, or windows-latest
    defaults:
      run:
        shell: bash
        working-directory: ./infrastructure

    steps:
    # Checkout the repository to the GitHub Actions runner
    - name: Checkout
      uses: actions/checkout@v3

    - name: configure aws credentials
      uses: aws-actions/configure-aws-credentials@v3
      with:
        role-to-assume: arn:aws:iam::730335176685:role/github
        role-session-name: terraform
        aws-region: eu-central-1

    # Initialize a new or existing Terraform working directory by creating initial files, loading any remote state, downloading modules, etc.
    - name: Terraform Init
      run: terraform init

    - uses: actions/download-artifact@v2
      with:
        name: terraform-plan-artifact
        path: ./infrastructure

    - run: terraform apply -input=false tfplan


